package net.yiim.yismcore;

import android.util.Log;

import androidx.test.runner.AndroidJUnit4;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

/**
 * Created by ikantech on 19-9-2.
 */
@RunWith(AndroidJUnit4.class)
public class DigestTest {
    private byte[] bytes = new byte[]{0x61, 0x62, 0x63, 0x64, 0x65};
    private String[] digestAlgs = new String[] {
            "MD5", "SHA1", "SHA224", "SHA256", "SHA384",
            "SHA512", "SM3", "SHA3-224", "SHA3-256", "SHA3-384", "SHA3-512",
            "BLAKE-2S", "BLAKE-2B"
    };
    private String[][] digestExpected = new String[][] {
            {
                "900150983CD24FB0D6963F7D28E17F72",
                "AB56B4D92B40713ACC5AF89985D4B786",
                "91BA9C7831C662D5011751974222E353"
            },
            {
                "A9993E364706816ABA3E25717850C26C9CD0D89D",
                "03DE6C570BFE24BFC328CCD7CA46B76EADAF4334",
                "51FF3C900938FACFB8E320E5DF3240F0E156642A"
            },
            {
                "23097D223405D8228642A477BDA255B32AADBCE4BDA0B3F7E36C9DA7",
                "BDD03D560993E675516BA5A50638B6531AC2AC3D5847C61916CFCED6",
                "3D3A360893FFA9766E124824BE4F1F371AD4BEDBE96C4B79B5B3B65A"
            },
            {
                "BA7816BF8F01CFEA414140DE5DAE2223B00361A396177A9CB410FF61F20015AD",
                "36BBE50ED96841D10443BCB670D6554F0A34B761BE67EC9C4A8AD2C0C44CA42C",
                "9F60580059CBF35FBFC0613467A7C2968BA6121C9ACE1AE40091C3AD088B22CC"
            },
            {
                "CB00753F45A35E8BB5A03D699AC65007272C32AB0EDED1631A8B605A43FF5BED8086072BA1E7CC2358BAECA134C825A7",
                "4C525CBEAC729EAF4B4665815BC5DB0C84FE6300068A727CF74E2813521565ABC0EC57A37EE4D8BE89D097C0D2AD52F0",
                "BC9ED9BEEC208B317E6439836BFB38B2C217CADFF165A18EDC177AEBD0C5A06F3BF1A18CF4B7AE778691FDF007885F89"
            },
            {
                "DDAF35A193617ABACC417349AE20413112E6FA4E89A97EA20A9EEEE64B55D39A2192992A274FC1A836BA3C23A3FEEBBD454D4423643CE80E2A9AC94FA54CA49F",
                "878AE65A92E86CAC011A570D4C30A7EAEC442B85CE8ECA0C2952B5E3CC0628C2E79D889AD4D5C7C626986D452DD86374B6FFAA7CD8B67665BEF2289A5C70B0A1",
                "801AB68BCBA25F54D42CCA4EFA44079B3DFFAE6364C73F5CC976457A1D71D1874E75A46D6E8F8E4F02299996C39F89501ADCE3B245D511570C897A224CF404A1"
            },
            {
                "66C7F0F462EEEDD9D1F2D46BDC10E4E24167C4875CF2F7A2297DA02B8F4BA8E0",
                "AFE4CCAC5AB7D52BCAE36373676215368BAF52D3905E1FECBE369CC120E97628",
                "066476AFA4E5C1BCF5F1DA13FAB4DC9552F9D4D55B97777E2C5698F9BBBD7227"
            },
            {
                "E642824C3F8CF24AD09234EE7D3C766FC9A3A5168D0C94AD73B46FDF",
                "6ACFAAB70AFD8439CEA3616B41088BD81C939B272548F6409CF30E57",
                "F300A13BD29D5CDFEF5A872274C83B624AA2DE1FE034674A82BCE0B8"
            },
            {
                "3A985DA74FE225B2045C172D6BD390BD855F086E3E9D525B46BFE24511431532",
                "D716EC61E18904A8F58679B71CB065D4D5DB72E0E0C3F155A4FEFF7ADD0E58EB",
                "EFA9C0368DEED8A59672DBB78D6EBF3A3BC0C59F088C0CDFFC272FE4B9BBB985"
            },
            {
                "EC01498288516FC926459F58E2C6AD8DF9B473CB0FC08C2596DA7CF0E49BE4B298D88CEA927AC7F539F1EDF228376D25",
                "348494236B82EDDA7602C78BA67FC3838E427C63C23E2C9D9AA5EA6354218A3C2CA564679ACABF3AC6BF5378047691C4",
                "739BF153D117C5C1298C0619BF265BACF5677F52645E0736DC093160921554CA6EE10290D7771D94BCC321528C46AEBD"
            },
            {
                "B751850B1A57168A5693CD924B6B096E08F621827444F70D884F5D0240D2712E10E116E9192AF3C91A7EC57647E3934057340B4CF408D5A56592F8274EEC53F0",
                "1D7C3AA6EE17DA5F4AEB78BE968AA38476DBEE54842E1AE2856F4C9A5CD04D45DC75C2902182B07C130ED582D476995B502B8777CCF69F60574471600386639B",
                "F06DD91B4B90CEEF2B627088EC46CA3717EBFD6CBCE33CBAD5237BBAA902653F4FF923BCAC57EB9B31CF94207664233C56D43798D1280457A8C8C282AC2CB4D3"
            },
            {
                "508C5E8C327C14E2E1A72BA34EEB452F37458B209ED63A294D999B4C86675982",
                "4BD7246C13721CC5B96F045BE71D49D5C82535332C6903771AFE9EF7B772136F",
                "0A90EAB5F9DDE5FD68C9307AE14A43F550CDE47D8315D0BFD29C7CF26D7D213B"
            },
            {
                "BA80A53F981C4D0D6A2797B69F12F6E94C212F14685AC4B74B12BB6FDBFFA2D17D87C5392AAB792DC252D5DE4533CC9518D38AA8DBF1925AB92386EDD4009923",
                "F3E89A60EC4B0B1854744984E421D22B82F181BD4601FB9B1726B2662DA61C29DFF09E75814ACB2639FD79E56616E55FC135F8476F0302B3DC8D44E082EB83A8",
                "ED699C7C517E3CB8C264B6E71355128740AB8254E03CA57A4A61D2AAC2F71D5CC592742F96861071A1CAE12BBD2B8239A6AB5DBEEAC7134F0276126B36E0C727"
            }
    };

    @Test
    public void testDigest() {
        try {
            for(int i = 0; i < digestAlgs.length; i++) {
                // 616263
                byte[] retBytes = YiSMCore.getInstance(digestAlgs[i])
                        .setupForDigest()
                        .doFinal(bytes, 0, 3);
                Log.d("YiLog", digestAlgs[i] + ", " + YiSMCore.toHexString(retBytes));
                Assert.assertArrayEquals(YiSMCore.fromHexString(digestExpected[i][0]), retBytes);

                // 6162636465
                retBytes = YiSMCore.getInstance(digestAlgs[i])
                        .setupForDigest()
                        .doFinal(bytes);
                Log.d("YiLog", digestAlgs[i] + ", " + YiSMCore.toHexString(retBytes));
                Assert.assertArrayEquals(YiSMCore.fromHexString(digestExpected[i][1]), retBytes);

                // 6162636465626364
                retBytes = YiSMCore.getInstance(digestAlgs[i])
                        .setupForDigest()
                        .update(bytes)
                        .update(bytes, 1, 3)
                        .doFinal();
                Log.d("YiLog", digestAlgs[i] + ", " + YiSMCore.toHexString(retBytes));
                Assert.assertArrayEquals(YiSMCore.fromHexString(digestExpected[i][2]), retBytes);
            }
        } catch (YiCryptoException e) {
            Assert.fail(e.toString());
        }
    }
}
